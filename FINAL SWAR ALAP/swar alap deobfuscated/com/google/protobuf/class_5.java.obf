package com.google.protobuf;

public final class r1
  extends z
  implements u0
{
  private static final r1 DEFAULT_INSTANCE;
  public static final int NANOS_FIELD_NUMBER = 2;
  private static volatile d1 PARSER;
  public static final int SECONDS_FIELD_NUMBER = 1;
  private int nanos_;
  private long seconds_;
  
  static
  {
    r1 localR1 = new r1();
    DEFAULT_INSTANCE = localR1;
    z.registerDefaultInstance(r1.class, localR1);
  }
  
  private r1() {}
  
  public static r1 k()
  {
    return DEFAULT_INSTANCE;
  }
  
  public static b n()
  {
    return (b)DEFAULT_INSTANCE.createBuilder();
  }
  
  public static b o(r1 paramR1)
  {
    return (b)DEFAULT_INSTANCE.createBuilder(paramR1);
  }
  
  private void p(int paramInt)
  {
    nanos_ = paramInt;
  }
  
  private void q(long paramLong)
  {
    seconds_ = paramLong;
  }
  
  protected final Object dynamicMethod(z.e paramE, Object paramObject1, Object paramObject2)
  {
    switch (a.a[paramE.ordinal()])
    {
    default: 
      throw new UnsupportedOperationException();
    case 7: 
      return null;
    case 6: 
      return Byte.valueOf((byte)1);
    case 5: 
      paramE = PARSER;
      if (paramE == null) {
        try
        {
          paramObject1 = PARSER;
          paramE = paramObject1;
          if (paramObject1 == null)
          {
            paramE = new z.b(DEFAULT_INSTANCE);
            PARSER = paramE;
          }
          return paramE;
        }
        finally {}
      }
      return paramE;
    case 4: 
      return DEFAULT_INSTANCE;
    case 3: 
      return z.newMessageInfo(DEFAULT_INSTANCE, "\000\002\000\000\001\002\002\000\000\000\001\002\002\004", new Object[] { "seconds_", "nanos_" });
    case 2: 
      return new b(null);
    }
    return new r1();
  }
  
  public int l()
  {
    return nanos_;
  }
  
  public long m()
  {
    return seconds_;
  }
  
  public static final class b
    extends z.a
    implements u0
  {
    private b()
    {
      super();
    }
    
    public b e(int paramInt)
    {
      copyOnWrite();
      r1.j((r1)instance, paramInt);
      return this;
    }
    
    public b f(long paramLong)
    {
      copyOnWrite();
      r1.i((r1)instance, paramLong);
      return this;
    }
  }
}
