package l4;

import android.accounts.Account;
import android.content.Context;
import android.os.BaseBundle;
import android.os.Bundle;
import android.os.Looper;
import android.os.RemoteException;
import android.util.Log;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.common.api.GoogleApiClient.b;
import com.google.android.gms.common.api.GoogleApiClient.c;
import com.google.android.gms.common.internal.c.d;
import com.google.android.gms.common.internal.d;
import com.google.android.gms.common.internal.h;
import com.google.android.gms.common.internal.k;
import com.google.android.gms.common.internal.s;
import com.google.android.gms.common.internal.u0;
import k4.e;
import q3.b;

public class a
  extends h
  implements e
{
  private final boolean a = true;
  private final d b;
  private final Bundle c;
  private final Integer d;
  
  public a(Context paramContext, Looper paramLooper, boolean paramBoolean, d paramD, Bundle paramBundle, GoogleApiClient.b paramB, GoogleApiClient.c paramC)
  {
    super(paramContext, paramLooper, 44, paramD, paramB, paramC);
    b = paramD;
    c = paramBundle;
    d = paramD.i();
  }
  
  public static Bundle g(d paramD)
  {
    paramD.h();
    Integer localInteger = paramD.i();
    Bundle localBundle = new Bundle();
    localBundle.putParcelable("com.google.android.gms.signin.internal.clientRequestedAccount", paramD.a());
    if (localInteger != null) {
      localBundle.putInt("com.google.android.gms.common.internal.ClientSettings.sessionId", localInteger.intValue());
    }
    localBundle.putBoolean("com.google.android.gms.signin.internal.offlineAccessRequested", false);
    localBundle.putBoolean("com.google.android.gms.signin.internal.idTokenRequested", false);
    localBundle.putString("com.google.android.gms.signin.internal.serverClientId", null);
    localBundle.putBoolean("com.google.android.gms.signin.internal.usePromptModeForAuthCode", true);
    localBundle.putBoolean("com.google.android.gms.signin.internal.forceCodeForRefreshToken", false);
    localBundle.putString("com.google.android.gms.signin.internal.hostedDomain", null);
    localBundle.putString("com.google.android.gms.signin.internal.logSessionId", null);
    localBundle.putBoolean("com.google.android.gms.signin.internal.waitForAccessTokenRefresh", false);
    return localBundle;
  }
  
  public final void a(f paramF)
  {
    s.l(paramF, "Expecting a valid ISignInCallbacks");
    try
    {
      localAccount = b.c();
      if (!"<<default account>>".equals(name)) {
        break label134;
      }
      localObject1 = o3.c.b(getContext()).c();
    }
    catch (RemoteException localRemoteException)
    {
      for (;;)
      {
        Account localAccount;
        Object localObject1;
        Log.w("SignInClientImpl", "Remote service probably died when signIn is called");
        try
        {
          paramF.s(new l(1, new b(8, null), null));
          return;
        }
        catch (RemoteException paramF)
        {
          for (;;) {}
        }
        Log.wtf("SignInClientImpl", "ISignInCallbacks#onSignInComplete should be executed from the same process, unexpected RemoteException.", localRemoteException);
        return;
        Object localObject2 = null;
      }
    }
    localObject1 = new u0(localAccount, ((Integer)s.k(d)).intValue(), (GoogleSignInAccount)localObject1);
    ((g)getService()).Z(new j(1, (u0)localObject1), paramF);
  }
  
  public final void b(k paramK, boolean paramBoolean)
  {
    try
    {
      ((g)getService()).Y(paramK, ((Integer)s.k(d)).intValue(), paramBoolean);
      return;
    }
    catch (RemoteException paramK)
    {
      for (;;) {}
    }
    Log.w("SignInClientImpl", "Remote service probably died when saveDefaultAccount is called");
  }
  
  public final void c()
  {
    try
    {
      ((g)getService()).c(((Integer)s.k(d)).intValue());
      return;
    }
    catch (RemoteException localRemoteException)
    {
      for (;;) {}
    }
    Log.w("SignInClientImpl", "Remote service probably died when clearAccountFromSessionStore is called");
  }
  
  public final void d()
  {
    connect(new c.d(this));
  }
  
  protected final Bundle getGetServiceRequestExtraArgs()
  {
    String str = b.f();
    if (!getContext().getPackageName().equals(str)) {
      c.putString("com.google.android.gms.signin.internal.realClientPackageName", b.f());
    }
    return c;
  }
  
  public final int getMinApkVersion()
  {
    return 12451000;
  }
  
  protected final String getServiceDescriptor()
  {
    return "com.google.android.gms.signin.internal.ISignInService";
  }
  
  protected final String getStartServiceAction()
  {
    return "com.google.android.gms.signin.service.START";
  }
  
  public final boolean requiresSignIn()
  {
    return a;
  }
}
