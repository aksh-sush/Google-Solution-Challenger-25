package y1;

import db.l;

public final class i
{
  public static final i a = new i();
  
  private i() {}
  
  public static final void a(a paramA1, a paramA2)
  {
    l.e(paramA1, "x");
    l.e(paramA2, "b");
    int i2 = paramA1.b(0);
    int i3 = paramA1.b(1);
    int i4 = paramA1.b(2);
    paramA1 = paramA1.a();
    paramA2 = paramA2.a();
    if (i2 > 0)
    {
      int m;
      for (int i = 0;; i = m)
      {
        m = i + 1;
        if (i3 > 0)
        {
          int n;
          for (int j = 0;; j = n)
          {
            n = j + 1;
            if (i4 > 0)
            {
              int i1;
              for (int k = 0;; k = i1)
              {
                i1 = k + 1;
                int i5 = i * i3 * i4 + j * i4 + k;
                paramA1[i5] += paramA2[k];
                if (i1 >= i4) {
                  break;
                }
              }
            }
            if (n >= i3) {
              break;
            }
          }
        }
        if (m >= i2) {
          return;
        }
      }
    }
  }
  
  public static final a b(a[] paramArrayOfA)
  {
    l.e(paramArrayOfA, "tensors");
    int i2 = paramArrayOfA[0].b(0);
    int m = paramArrayOfA.length - 1;
    int j;
    int k;
    if (m >= 0)
    {
      i = 0;
      j = 0;
      for (;;)
      {
        k = i + 1;
        j += paramArrayOfA[i].b(1);
        if (k > m)
        {
          i = j;
          break;
        }
        i = k;
      }
    }
    int i = 0;
    a localA = new a(new int[] { i2, i });
    float[] arrayOfFloat1 = localA.a();
    if (i2 > 0)
    {
      int n;
      for (j = 0;; j = n)
      {
        n = j + 1;
        k = j * i;
        int i3 = paramArrayOfA.length - 1;
        if (i3 >= 0)
        {
          int i1;
          for (m = 0;; m = i1)
          {
            i1 = m + 1;
            float[] arrayOfFloat2 = paramArrayOfA[m].a();
            m = paramArrayOfA[m].b(1);
            System.arraycopy(arrayOfFloat2, j * m, arrayOfFloat1, k, m);
            k += m;
            if (i1 > i3) {
              break;
            }
          }
        }
        if (n >= i2) {
          return localA;
        }
      }
    }
    return localA;
  }
  
  public static final a c(a paramA1, a paramA2)
  {
    l.e(paramA1, "x");
    l.e(paramA2, "w");
    int i = paramA1.b(0);
    int i7 = paramA1.b(1);
    int i8 = paramA1.b(2);
    int i9 = paramA2.b(0);
    int i10 = i7 - i9 + 1;
    int i11 = paramA2.b(2);
    a localA = new a(new int[] { i, i10, i11 });
    float[] arrayOfFloat1 = paramA1.a();
    float[] arrayOfFloat2 = localA.a();
    paramA2 = paramA2.a();
    if (i > 0)
    {
      int j = 0;
      paramA1 = localA;
      for (;;)
      {
        int i2 = j + 1;
        if (i11 > 0)
        {
          int i3;
          for (int k = 0;; k = i3)
          {
            i3 = k + 1;
            if (i10 > 0)
            {
              int i4;
              for (int m = 0;; m = i4)
              {
                i4 = m + 1;
                float f2 = 0.0F;
                float f1 = 0.0F;
                if (i9 > 0)
                {
                  int i5;
                  for (int n = 0;; n = i5)
                  {
                    i5 = n + 1;
                    if (i8 > 0)
                    {
                      int i6;
                      for (int i1 = 0;; i1 = i6)
                      {
                        i6 = i1 + 1;
                        f1 += arrayOfFloat1[(i7 * i8 * j + (n + m) * i8 + i1)] * paramA2[((n * i8 + i1) * i11 + k)];
                        if (i6 >= i8) {
                          break;
                        }
                      }
                    }
                    if (i5 >= i9) {
                      break;
                    }
                  }
                }
                f1 = f2;
                arrayOfFloat2[(i10 * i11 * j + m * i11 + k)] = f1;
                if (i4 >= i10) {
                  break;
                }
              }
            }
            if (i3 >= i11) {
              break;
            }
          }
        }
        if (i2 >= i) {
          return paramA1;
        }
        j = i2;
      }
    }
    return localA;
  }
  
  public static final a d(a paramA1, a paramA2, a paramA3)
  {
    l.e(paramA1, "x");
    l.e(paramA2, "w");
    l.e(paramA3, "b");
    int n = paramA1.b(0);
    int i1 = paramA3.b(0);
    paramA1 = h(paramA1, paramA2);
    paramA2 = paramA3.a();
    paramA3 = paramA1.a();
    if (n > 0)
    {
      int k;
      for (int i = 0;; i = k)
      {
        k = i + 1;
        if (i1 > 0)
        {
          int m;
          for (int j = 0;; j = m)
          {
            m = j + 1;
            int i2 = i * i1 + j;
            paramA3[i2] += paramA2[j];
            if (m >= i1) {
              break;
            }
          }
        }
        if (k >= n) {
          return paramA1;
        }
      }
    }
    return paramA1;
  }
  
  public static final a e(String[] paramArrayOfString, int paramInt, a paramA)
  {
    l.e(paramArrayOfString, "texts");
    l.e(paramA, "w");
    int n = paramArrayOfString.length;
    int i1 = paramA.b(1);
    a localA = new a(new int[] { n, paramInt, i1 });
    float[] arrayOfFloat = localA.a();
    paramA = paramA.a();
    if (n > 0)
    {
      int k;
      for (int i = 0;; i = k)
      {
        k = i + 1;
        int[] arrayOfInt = j.a.d(paramArrayOfString[i], paramInt);
        if (paramInt > 0)
        {
          int m;
          for (int j = 0;; j = m)
          {
            m = j + 1;
            System.arraycopy(paramA, arrayOfInt[j] * i1, arrayOfFloat, i1 * paramInt * i + j * i1, i1);
            if (m >= paramInt) {
              break;
            }
          }
        }
        if (k >= n) {
          return localA;
        }
      }
    }
    return localA;
  }
  
  public static final void f(a paramA, int paramInt)
  {
    l.e(paramA, "x");
    if (paramInt >= paramA.c()) {
      return;
    }
    int m = paramA.c();
    int i = 1;
    int k = 1;
    int j;
    if (paramInt < m)
    {
      j = paramInt;
      i = k;
      for (;;)
      {
        k = j + 1;
        i *= paramA.b(j);
        if (k >= m) {
          break;
        }
        j = k;
      }
    }
    int[] arrayOfInt = new int[paramInt + 1];
    if (paramInt > 0) {
      for (j = 0;; j = k)
      {
        k = j + 1;
        arrayOfInt[j] = paramA.b(j);
        if (k >= paramInt) {
          break;
        }
      }
    }
    arrayOfInt[paramInt] = i;
    paramA.d(arrayOfInt);
  }
  
  public static final a g(a paramA, int paramInt)
  {
    l.e(paramA, "x");
    int i5 = paramA.b(0);
    int i = paramA.b(1);
    int i6 = paramA.b(2);
    int i7 = i - paramInt + 1;
    a localA = new a(new int[] { i5, i7, i6 });
    paramA = paramA.a();
    float[] arrayOfFloat = localA.a();
    if (i5 > 0)
    {
      int i1;
      for (int k = 0;; k = i1)
      {
        i1 = k + 1;
        if (i6 > 0)
        {
          int i2;
          for (int m = 0;; m = i2)
          {
            i2 = m + 1;
            if (i7 > 0)
            {
              int i3;
              for (int j = 0;; j = i3)
              {
                i3 = j + 1;
                int i8 = j * i6;
                int i9 = k * i7 * i6 + i8 + m;
                arrayOfFloat[i9] = Float.MIN_VALUE;
                if (paramInt > 0)
                {
                  int n = 0;
                  j = i;
                  for (;;)
                  {
                    int i4 = n + 1;
                    arrayOfFloat[i9] = Math.max(arrayOfFloat[i9], paramA[(k * i * i6 + i8 + m + n * i6)]);
                    if (i4 >= paramInt)
                    {
                      i = j;
                      break;
                    }
                    n = i4;
                  }
                }
                if (i3 >= i7) {
                  break;
                }
              }
            }
            if (i2 >= i6) {
              break;
            }
          }
        }
        if (i1 >= i5) {
          return localA;
        }
      }
    }
    return localA;
  }
  
  public static final a h(a paramA1, a paramA2)
  {
    l.e(paramA1, "x");
    l.e(paramA2, "w");
    int i2 = paramA1.b(0);
    int i3 = paramA2.b(0);
    int i4 = paramA2.b(1);
    a localA = new a(new int[] { i2, i4 });
    paramA1 = paramA1.a();
    paramA2 = paramA2.a();
    float[] arrayOfFloat = localA.a();
    if (i2 > 0)
    {
      int m;
      for (int i = 0;; i = m)
      {
        m = i + 1;
        if (i4 > 0)
        {
          int n;
          for (int j = 0;; j = n)
          {
            n = j + 1;
            int i5 = i * i4 + j;
            arrayOfFloat[i5] = 0.0F;
            if (i3 > 0)
            {
              int i1;
              for (int k = 0;; k = i1)
              {
                i1 = k + 1;
                arrayOfFloat[i5] += paramA1[(i * i3 + k)] * paramA2[(k * i4 + j)];
                if (i1 >= i3) {
                  break;
                }
              }
            }
            if (n >= i4) {
              break;
            }
          }
        }
        if (m >= i2) {
          return localA;
        }
      }
    }
    return localA;
  }
  
  public static final void i(a paramA)
  {
    l.e(paramA, "x");
    paramA = paramA.a();
    int k = paramA.length - 1;
    if (k >= 0)
    {
      int j;
      for (int i = 0;; i = j)
      {
        j = i + 1;
        if (paramA[i] < 0.0F) {
          paramA[i] = 0.0F;
        }
        if (j > k) {
          return;
        }
      }
    }
  }
  
  public static final void j(a paramA)
  {
    l.e(paramA, "x");
    int i = 0;
    int n = paramA.b(0);
    int i1 = paramA.b(1);
    paramA = paramA.a();
    if (n > 0) {
      for (;;)
      {
        int k = i + 1;
        i *= i1;
        int i2 = i + i1;
        float f1 = Float.MIN_VALUE;
        float f2 = Float.MIN_VALUE;
        int j;
        int m;
        if (i < i2)
        {
          j = i;
          for (;;)
          {
            m = j + 1;
            f3 = paramA[j];
            f1 = f2;
            if (f3 > f2) {
              f1 = f3;
            }
            if (m >= i2) {
              break;
            }
            j = m;
            f2 = f1;
          }
        }
        f2 = 0.0F;
        float f3 = 0.0F;
        if (i < i2)
        {
          j = i;
          f2 = f3;
          for (;;)
          {
            m = j + 1;
            f3 = (float)Math.exp(paramA[j] - f1);
            paramA[j] = f3;
            f2 += f3;
            if (m >= i2) {
              break;
            }
            j = m;
          }
        }
        if (i < i2) {
          for (;;)
          {
            j = i + 1;
            paramA[i] /= f2;
            if (j >= i2) {
              break;
            }
            i = j;
          }
        }
        if (k >= n) {
          return;
        }
        i = k;
      }
    }
  }
  
  public static final a k(a paramA)
  {
    l.e(paramA, "x");
    int n = paramA.b(0);
    int i1 = paramA.b(1);
    a localA = new a(new int[] { i1, n });
    paramA = paramA.a();
    float[] arrayOfFloat = localA.a();
    if (n > 0)
    {
      int k;
      for (int i = 0;; i = k)
      {
        k = i + 1;
        if (i1 > 0)
        {
          int m;
          for (int j = 0;; j = m)
          {
            m = j + 1;
            arrayOfFloat[(j * n + i)] = paramA[(i * i1 + j)];
            if (m >= i1) {
              break;
            }
          }
        }
        if (k >= n) {
          return localA;
        }
      }
    }
    return localA;
  }
  
  public static final a l(a paramA)
  {
    l.e(paramA, "x");
    int i2 = paramA.b(0);
    int i3 = paramA.b(1);
    int i4 = paramA.b(2);
    a localA = new a(new int[] { i4, i3, i2 });
    paramA = paramA.a();
    float[] arrayOfFloat = localA.a();
    if (i2 > 0)
    {
      int m;
      for (int i = 0;; i = m)
      {
        m = i + 1;
        if (i3 > 0)
        {
          int n;
          for (int j = 0;; j = n)
          {
            n = j + 1;
            if (i4 > 0)
            {
              int i1;
              for (int k = 0;; k = i1)
              {
                i1 = k + 1;
                arrayOfFloat[(k * i2 * i3 + j * i2 + i)] = paramA[(i * i3 * i4 + j * i4 + k)];
                if (i1 >= i4) {
                  break;
                }
              }
            }
            if (n >= i3) {
              break;
            }
          }
        }
        if (m >= i2) {
          return localA;
        }
      }
    }
    return localA;
  }
}
