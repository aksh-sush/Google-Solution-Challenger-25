package androidx.appcompat.widget;

import android.content.Context;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup.MarginLayoutParams;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.appcompat.view.b;
import androidx.core.view.h0;
import f.f;
import f.j;

public class ActionBarContextView
  extends a
{
  private CharSequence m;
  private CharSequence n;
  private View o;
  private View p;
  private View q;
  private LinearLayout r;
  private TextView s;
  private TextView t;
  private int u;
  private int v;
  private boolean w;
  private int x;
  
  public ActionBarContextView(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public ActionBarContextView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, f.a.g);
  }
  
  public ActionBarContextView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    paramContext = f1.v(paramContext, paramAttributeSet, j.y, paramInt, 0);
    h0.w0(this, paramContext.g(j.z));
    u = paramContext.n(j.D, 0);
    v = paramContext.n(j.C, 0);
    i = paramContext.m(j.B, 0);
    x = paramContext.n(j.A, f.g.d);
    paramContext.w();
  }
  
  private void i()
  {
    if (r == null)
    {
      LayoutInflater.from(getContext()).inflate(f.g.a, this);
      localObject = (LinearLayout)getChildAt(getChildCount() - 1);
      r = ((LinearLayout)localObject);
      s = ((TextView)((View)localObject).findViewById(f.e));
      t = ((TextView)r.findViewById(f.d));
      if (u != 0) {
        s.setTextAppearance(getContext(), u);
      }
      if (v != 0) {
        t.setTextAppearance(getContext(), v);
      }
    }
    s.setText(m);
    t.setText(n);
    boolean bool2 = TextUtils.isEmpty(m);
    boolean bool1 = TextUtils.isEmpty(n) ^ true;
    Object localObject = t;
    int j = 0;
    if (bool1) {
      i = 0;
    } else {
      i = 8;
    }
    ((View)localObject).setVisibility(i);
    localObject = r;
    int i = j;
    if (!(bool2 ^ true)) {
      if (bool1) {
        i = j;
      } else {
        i = 8;
      }
    }
    ((View)localObject).setVisibility(i);
    if (r.getParent() == null) {
      addView(r);
    }
  }
  
  public void g()
  {
    if (o == null) {
      k();
    }
  }
  
  protected ViewGroup.LayoutParams generateDefaultLayoutParams()
  {
    return new ViewGroup.MarginLayoutParams(-1, -2);
  }
  
  public ViewGroup.LayoutParams generateLayoutParams(AttributeSet paramAttributeSet)
  {
    return new ViewGroup.MarginLayoutParams(getContext(), paramAttributeSet);
  }
  
  public CharSequence getSubtitle()
  {
    return n;
  }
  
  public CharSequence getTitle()
  {
    return m;
  }
  
  public void h(final b paramB)
  {
    Object localObject = o;
    if (localObject == null)
    {
      localObject = LayoutInflater.from(getContext()).inflate(x, this, false);
      o = ((View)localObject);
    }
    for (;;)
    {
      addView((View)localObject);
      break;
      if (((View)localObject).getParent() != null) {
        break;
      }
      localObject = o;
    }
    localObject = o.findViewById(f.i);
    p = ((View)localObject);
    ((View)localObject).setOnClickListener(new a(paramB));
    paramB = (androidx.appcompat.view.menu.g)paramB.e();
    localObject = h;
    if (localObject != null) {
      ((c)localObject).y();
    }
    localObject = new c(getContext());
    h = ((c)localObject);
    ((c)localObject).J(true);
    localObject = new ViewGroup.LayoutParams(-2, -1);
    paramB.c(h, f);
    paramB = (ActionMenuView)h.o(this);
    g = paramB;
    h0.w0(paramB, null);
    addView(g, (ViewGroup.LayoutParams)localObject);
  }
  
  public boolean j()
  {
    return w;
  }
  
  public void k()
  {
    removeAllViews();
    q = null;
    g = null;
    h = null;
    View localView = p;
    if (localView != null) {
      localView.setOnClickListener(null);
    }
  }
  
  public boolean l()
  {
    c localC = h;
    if (localC != null) {
      return localC.K();
    }
    return false;
  }
  
  public void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    c localC = h;
    if (localC != null)
    {
      localC.B();
      h.C();
    }
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    paramBoolean = q1.b(this);
    int i;
    if (paramBoolean) {
      i = paramInt3 - paramInt1 - getPaddingRight();
    } else {
      i = getPaddingLeft();
    }
    int j = getPaddingTop();
    int k = paramInt4 - paramInt2 - getPaddingTop() - getPaddingBottom();
    Object localObject = o;
    paramInt2 = i;
    if (localObject != null)
    {
      paramInt2 = i;
      if (((View)localObject).getVisibility() != 8)
      {
        localObject = (ViewGroup.MarginLayoutParams)o.getLayoutParams();
        if (paramBoolean) {
          paramInt2 = rightMargin;
        } else {
          paramInt2 = leftMargin;
        }
        if (paramBoolean) {
          paramInt4 = leftMargin;
        } else {
          paramInt4 = rightMargin;
        }
        paramInt2 = a.d(i, paramInt2, paramBoolean);
        paramInt2 = a.d(paramInt2 + e(o, paramInt2, j, k, paramBoolean), paramInt4, paramBoolean);
      }
    }
    localObject = r;
    paramInt4 = paramInt2;
    if (localObject != null)
    {
      paramInt4 = paramInt2;
      if (q == null)
      {
        paramInt4 = paramInt2;
        if (((View)localObject).getVisibility() != 8) {
          paramInt4 = paramInt2 + e(r, paramInt2, j, k, paramBoolean);
        }
      }
    }
    localObject = q;
    if (localObject != null) {
      e((View)localObject, paramInt4, j, k, paramBoolean);
    }
    if (paramBoolean) {
      paramInt1 = getPaddingLeft();
    } else {
      paramInt1 = paramInt3 - paramInt1 - getPaddingRight();
    }
    localObject = g;
    if (localObject != null) {
      e((View)localObject, paramInt1, j, k, paramBoolean ^ true);
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    int i = View.MeasureSpec.getMode(paramInt1);
    int k = 1073741824;
    if (i == 1073741824)
    {
      if (View.MeasureSpec.getMode(paramInt2) != 0)
      {
        int i3 = View.MeasureSpec.getSize(paramInt1);
        i = this.i;
        if (i <= 0) {
          i = View.MeasureSpec.getSize(paramInt2);
        }
        int i4 = getPaddingTop() + getPaddingBottom();
        paramInt1 = i3 - getPaddingLeft() - getPaddingRight();
        int i2 = i - i4;
        int j = View.MeasureSpec.makeMeasureSpec(i2, Integer.MIN_VALUE);
        localObject = o;
        int i1 = 0;
        paramInt2 = paramInt1;
        if (localObject != null)
        {
          paramInt1 = c((View)localObject, paramInt1, j, 0);
          localObject = (ViewGroup.MarginLayoutParams)o.getLayoutParams();
          paramInt2 = paramInt1 - (leftMargin + rightMargin);
        }
        localObject = g;
        paramInt1 = paramInt2;
        if (localObject != null)
        {
          paramInt1 = paramInt2;
          if (((View)localObject).getParent() == this) {
            paramInt1 = c(g, paramInt2, j, 0);
          }
        }
        localObject = r;
        paramInt2 = paramInt1;
        int i5;
        if (localObject != null)
        {
          paramInt2 = paramInt1;
          if (q == null) {
            if (w)
            {
              paramInt2 = View.MeasureSpec.makeMeasureSpec(0, 0);
              r.measure(paramInt2, j);
              i5 = r.getMeasuredWidth();
              if (i5 <= paramInt1) {
                j = 1;
              } else {
                j = 0;
              }
              paramInt2 = paramInt1;
              if (j != 0) {
                paramInt2 = paramInt1 - i5;
              }
              localObject = r;
              if (j != 0) {
                paramInt1 = 0;
              } else {
                paramInt1 = 8;
              }
              ((View)localObject).setVisibility(paramInt1);
            }
            else
            {
              paramInt2 = c((View)localObject, paramInt1, j, 0);
            }
          }
        }
        localObject = q;
        if (localObject != null)
        {
          localObject = ((View)localObject).getLayoutParams();
          i5 = width;
          if (i5 != -2) {
            paramInt1 = 1073741824;
          } else {
            paramInt1 = Integer.MIN_VALUE;
          }
          j = paramInt2;
          if (i5 >= 0) {
            j = Math.min(i5, paramInt2);
          }
          i5 = height;
          if (i5 != -2) {
            paramInt2 = k;
          } else {
            paramInt2 = Integer.MIN_VALUE;
          }
          k = i2;
          if (i5 >= 0) {
            k = Math.min(i5, i2);
          }
          q.measure(View.MeasureSpec.makeMeasureSpec(j, paramInt1), View.MeasureSpec.makeMeasureSpec(k, paramInt2));
        }
        if (this.i <= 0)
        {
          k = getChildCount();
          paramInt2 = 0;
          paramInt1 = i1;
          while (paramInt1 < k)
          {
            j = getChildAt(paramInt1).getMeasuredHeight() + i4;
            i = paramInt2;
            if (j > paramInt2) {
              i = j;
            }
            paramInt1 += 1;
            paramInt2 = i;
          }
          setMeasuredDimension(i3, paramInt2);
          return;
        }
        setMeasuredDimension(i3, i);
        return;
      }
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(getClass().getSimpleName());
      ((StringBuilder)localObject).append(" can only be used with android:layout_height=\"wrap_content\"");
      throw new IllegalStateException(((StringBuilder)localObject).toString());
    }
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(getClass().getSimpleName());
    ((StringBuilder)localObject).append(" can only be used with android:layout_width=\"match_parent\" (or fill_parent)");
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
  
  public void setContentHeight(int paramInt)
  {
    i = paramInt;
  }
  
  public void setCustomView(View paramView)
  {
    Object localObject = q;
    if (localObject != null) {
      removeView((View)localObject);
    }
    q = paramView;
    if (paramView != null)
    {
      localObject = r;
      if (localObject != null)
      {
        removeView((View)localObject);
        r = null;
      }
    }
    if (paramView != null) {
      addView(paramView);
    }
    requestLayout();
  }
  
  public void setSubtitle(CharSequence paramCharSequence)
  {
    n = paramCharSequence;
    i();
  }
  
  public void setTitle(CharSequence paramCharSequence)
  {
    m = paramCharSequence;
    i();
    h0.v0(this, paramCharSequence);
  }
  
  public void setTitleOptional(boolean paramBoolean)
  {
    if (paramBoolean != w) {
      requestLayout();
    }
    w = paramBoolean;
  }
  
  public boolean shouldDelayChildPressedState()
  {
    return false;
  }
  
  class a
    implements View.OnClickListener
  {
    a(b paramB) {}
    
    public void onClick(View paramView)
    {
      paramB.c();
    }
  }
}
