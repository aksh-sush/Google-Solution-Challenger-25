package androidx.appcompat.widget;

import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Bitmap;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.util.AttributeSet;
import android.view.View;
import android.widget.ImageButton;
import f.a;

public class o
  extends ImageButton
{
  private final e e;
  private final p f;
  private boolean g = false;
  
  public o(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, a.B);
  }
  
  public o(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(c1.b(paramContext), paramAttributeSet, paramInt);
    b1.a(this, getContext());
    paramContext = new e(this);
    e = paramContext;
    paramContext.e(paramAttributeSet, paramInt);
    paramContext = new p(this);
    f = paramContext;
    paramContext.g(paramAttributeSet, paramInt);
  }
  
  protected void drawableStateChanged()
  {
    super.drawableStateChanged();
    Object localObject = e;
    if (localObject != null) {
      ((e)localObject).b();
    }
    localObject = f;
    if (localObject != null) {
      ((p)localObject).c();
    }
  }
  
  public ColorStateList getSupportBackgroundTintList()
  {
    e localE = e;
    if (localE != null) {
      return localE.c();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportBackgroundTintMode()
  {
    e localE = e;
    if (localE != null) {
      return localE.d();
    }
    return null;
  }
  
  public ColorStateList getSupportImageTintList()
  {
    p localP = f;
    if (localP != null) {
      return localP.d();
    }
    return null;
  }
  
  public PorterDuff.Mode getSupportImageTintMode()
  {
    p localP = f;
    if (localP != null) {
      return localP.e();
    }
    return null;
  }
  
  public boolean hasOverlappingRendering()
  {
    return (f.f()) && (super.hasOverlappingRendering());
  }
  
  public void setBackgroundDrawable(Drawable paramDrawable)
  {
    super.setBackgroundDrawable(paramDrawable);
    e localE = e;
    if (localE != null) {
      localE.f(paramDrawable);
    }
  }
  
  public void setBackgroundResource(int paramInt)
  {
    super.setBackgroundResource(paramInt);
    e localE = e;
    if (localE != null) {
      localE.g(paramInt);
    }
  }
  
  public void setImageBitmap(Bitmap paramBitmap)
  {
    super.setImageBitmap(paramBitmap);
    paramBitmap = f;
    if (paramBitmap != null) {
      paramBitmap.c();
    }
  }
  
  public void setImageDrawable(Drawable paramDrawable)
  {
    p localP = f;
    if ((localP != null) && (paramDrawable != null) && (!g)) {
      localP.h(paramDrawable);
    }
    super.setImageDrawable(paramDrawable);
    paramDrawable = f;
    if (paramDrawable != null)
    {
      paramDrawable.c();
      if (!g) {
        f.b();
      }
    }
  }
  
  public void setImageLevel(int paramInt)
  {
    super.setImageLevel(paramInt);
    g = true;
  }
  
  public void setImageResource(int paramInt)
  {
    f.i(paramInt);
  }
  
  public void setImageURI(Uri paramUri)
  {
    super.setImageURI(paramUri);
    paramUri = f;
    if (paramUri != null) {
      paramUri.c();
    }
  }
  
  public void setSupportBackgroundTintList(ColorStateList paramColorStateList)
  {
    e localE = e;
    if (localE != null) {
      localE.i(paramColorStateList);
    }
  }
  
  public void setSupportBackgroundTintMode(PorterDuff.Mode paramMode)
  {
    e localE = e;
    if (localE != null) {
      localE.j(paramMode);
    }
  }
  
  public void setSupportImageTintList(ColorStateList paramColorStateList)
  {
    p localP = f;
    if (localP != null) {
      localP.j(paramColorStateList);
    }
  }
  
  public void setSupportImageTintMode(PorterDuff.Mode paramMode)
  {
    p localP = f;
    if (localP != null) {
      localP.k(paramMode);
    }
  }
}
