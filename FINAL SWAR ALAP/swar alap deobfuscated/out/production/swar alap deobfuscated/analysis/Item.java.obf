package y1;

import db.l;
import ta.f;

public final class a
{
  public static final a d = new a(null);
  private int[] a;
  private int b;
  private float[] c;
  
  public a(int[] paramArrayOfInt)
  {
    a = paramArrayOfInt;
    int i = a.a(d, paramArrayOfInt);
    b = i;
    c = new float[i];
  }
  
  public final float[] a()
  {
    return c;
  }
  
  public final int b(int paramInt)
  {
    return a[paramInt];
  }
  
  public final int c()
  {
    return a.length;
  }
  
  public final void d(int[] paramArrayOfInt)
  {
    l.e(paramArrayOfInt, "shape");
    a = paramArrayOfInt;
    int i = a.a(d, paramArrayOfInt);
    paramArrayOfInt = new float[i];
    System.arraycopy(c, 0, paramArrayOfInt, 0, Math.min(b, i));
    c = paramArrayOfInt;
    b = i;
  }
  
  public static final class a
  {
    private a() {}
    
    private final int b(int[] paramArrayOfInt)
    {
      int i = paramArrayOfInt.length;
      int m = 1;
      if (i == 0) {
        i = 1;
      } else {
        i = 0;
      }
      if (i == 0)
      {
        int k = paramArrayOfInt[0];
        int n = f.n(paramArrayOfInt);
        int j = k;
        if (1 <= n)
        {
          i = m;
          for (;;)
          {
            k *= paramArrayOfInt[i];
            j = k;
            if (i == n) {
              break;
            }
            i += 1;
          }
        }
        return j;
      }
      throw new UnsupportedOperationException("Empty array can't be reduced.");
    }
  }
}
