package va;

import cb.p;
import db.l;
import db.m;
import db.s;
import java.io.Serializable;
import sa.t;

public final class c
  implements g, Serializable
{
  private final g e;
  private final g.b f;
  
  public c(g paramG, g.b paramB)
  {
    e = paramG;
    f = paramB;
  }
  
  private final boolean b(g.b paramB)
  {
    return l.a(a(paramB.getKey()), paramB);
  }
  
  private final boolean d(c paramC)
  {
    for (;;)
    {
      if (!b(f)) {
        return false;
      }
      paramC = e;
      if (!(paramC instanceof c)) {
        break;
      }
      paramC = (c)paramC;
    }
    l.c(paramC, "null cannot be cast to non-null type kotlin.coroutines.CoroutineContext.Element");
    return b((g.b)paramC);
  }
  
  private final int e()
  {
    int i = 2;
    Object localObject = this;
    for (;;)
    {
      localObject = e;
      if ((localObject instanceof c)) {
        localObject = (c)localObject;
      } else {
        localObject = null;
      }
      if (localObject == null) {
        return i;
      }
      i += 1;
    }
  }
  
  private final Object writeReplace()
  {
    int i = e();
    g[] arrayOfG = new g[i];
    final s localS = new s();
    T(t.a, new c(arrayOfG, localS));
    if (e == i) {
      i = 1;
    } else {
      i = 0;
    }
    if (i != 0) {
      return new a(arrayOfG);
    }
    throw new IllegalStateException("Check failed.".toString());
  }
  
  public Object T(Object paramObject, p paramP)
  {
    l.e(paramP, "operation");
    return paramP.invoke(e.T(paramObject, paramP), f);
  }
  
  public g.b a(g.c paramC)
  {
    l.e(paramC, "key");
    for (Object localObject = this;; localObject = (c)localObject)
    {
      g.b localB = f.a(paramC);
      if (localB != null) {
        return localB;
      }
      localObject = e;
      if (!(localObject instanceof c)) {
        break;
      }
    }
    return ((g)localObject).a(paramC);
  }
  
  public boolean equals(Object paramObject)
  {
    if (this != paramObject) {
      if ((paramObject instanceof c))
      {
        paramObject = (c)paramObject;
        if ((paramObject.e() == e()) && (paramObject.d(this))) {}
      }
      else
      {
        return false;
      }
    }
    return true;
  }
  
  public g g(g paramG)
  {
    return g.a.a(this, paramG);
  }
  
  public int hashCode()
  {
    return e.hashCode() + f.hashCode();
  }
  
  public g r(g.c paramC)
  {
    l.e(paramC, "key");
    if (f.a(paramC) != null) {
      return e;
    }
    paramC = e.r(paramC);
    if (paramC == e) {
      return this;
    }
    if (paramC == h.e) {
      return f;
    }
    return new c(paramC, f);
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append('[');
    localStringBuilder.append((String)T("", b.e));
    localStringBuilder.append(']');
    return localStringBuilder.toString();
  }
  
  private static final class a
    implements Serializable
  {
    public static final a f = new a(null);
    private final g[] e;
    
    public a(g[] paramArrayOfG)
    {
      e = paramArrayOfG;
    }
    
    private final Object readResolve()
    {
      g[] arrayOfG = e;
      Object localObject = h.e;
      int j = arrayOfG.length;
      int i = 0;
      while (i < j)
      {
        localObject = ((g)localObject).g(arrayOfG[i]);
        i += 1;
      }
      return localObject;
    }
    
    public static final class a
    {
      private a() {}
    }
  }
  
  static final class b
    extends m
    implements p
  {
    public static final b e = new b();
    
    b()
    {
      super();
    }
    
    public final String a(String paramString, g.b paramB)
    {
      l.e(paramString, "acc");
      l.e(paramB, "element");
      int i;
      if (paramString.length() == 0) {
        i = 1;
      } else {
        i = 0;
      }
      if (i != 0) {
        return paramB.toString();
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(paramString);
      localStringBuilder.append(", ");
      localStringBuilder.append(paramB);
      return localStringBuilder.toString();
    }
  }
  
  static final class c
    extends m
    implements p
  {
    c(g[] paramArrayOfG, s paramS)
    {
      super();
    }
    
    public final void a(t paramT, g.b paramB)
    {
      l.e(paramT, "<anonymous parameter 0>");
      l.e(paramB, "element");
      paramT = e;
      s localS = localS;
      int i = e;
      e = (i + 1);
      paramT[i] = paramB;
    }
  }
}
