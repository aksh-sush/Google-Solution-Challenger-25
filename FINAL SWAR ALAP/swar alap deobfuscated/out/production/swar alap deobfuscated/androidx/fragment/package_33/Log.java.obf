package androidx.fragment.app;

import android.app.Activity;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.os.BaseBundle;
import android.os.Bundle;
import android.util.Log;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnAttachStateChangeListener;
import android.view.ViewGroup;
import android.view.ViewParent;
import androidx.core.view.h0;
import androidx.lifecycle.m0;
import j0.b;
import java.util.Iterator;
import java.util.List;

class s
{
  private final l a;
  private final t b;
  private final Fragment c;
  private boolean d = false;
  private int e = -1;
  
  s(l paramL, t paramT, Fragment paramFragment)
  {
    a = paramL;
    b = paramT;
    c = paramFragment;
  }
  
  s(l paramL, t paramT, Fragment paramFragment, r paramR)
  {
    a = paramL;
    b = paramT;
    c = paramFragment;
    mSavedViewState = null;
    mSavedViewRegistryState = null;
    mBackStackNesting = 0;
    mInLayout = false;
    mAdded = false;
    paramL = mTarget;
    if (paramL != null) {
      paramL = mWho;
    } else {
      paramL = null;
    }
    mTargetWho = paramL;
    mTarget = null;
    paramL = q;
    if (paramL == null) {
      paramL = new Bundle();
    }
    mSavedFragmentState = paramL;
  }
  
  s(l paramL, t paramT, ClassLoader paramClassLoader, i paramI, r paramR)
  {
    a = paramL;
    b = paramT;
    paramT = paramI.a(paramClassLoader, e);
    c = paramT;
    paramL = n;
    if (paramL != null) {
      paramL.setClassLoader(paramClassLoader);
    }
    paramT.setArguments(n);
    mWho = f;
    mFromLayout = g;
    mRestored = true;
    mFragmentId = h;
    mContainerId = i;
    mTag = j;
    mRetainInstance = k;
    mRemoving = l;
    mDetached = m;
    mHidden = o;
    mMaxState = androidx.lifecycle.i.b.values()[p];
    paramL = q;
    if (paramL == null) {
      paramL = new Bundle();
    }
    mSavedFragmentState = paramL;
    if (m.F0(2))
    {
      paramL = new StringBuilder();
      paramL.append("Instantiated fragment ");
      paramL.append(paramT);
      Log.v("FragmentManager", paramL.toString());
    }
  }
  
  private boolean l(View paramView)
  {
    if (paramView == c.mView) {
      return true;
    }
    for (paramView = paramView.getParent(); paramView != null; paramView = paramView.getParent()) {
      if (paramView == c.mView) {
        return true;
      }
    }
    return false;
  }
  
  private Bundle q()
  {
    Object localObject2 = new Bundle();
    c.performSaveInstanceState((Bundle)localObject2);
    a.j(c, (Bundle)localObject2, false);
    Object localObject1 = localObject2;
    if (((BaseBundle)localObject2).isEmpty()) {
      localObject1 = null;
    }
    if (c.mView != null) {
      s();
    }
    localObject2 = localObject1;
    if (c.mSavedViewState != null)
    {
      localObject2 = localObject1;
      if (localObject1 == null) {
        localObject2 = new Bundle();
      }
      ((Bundle)localObject2).putSparseParcelableArray("android:view_state", c.mSavedViewState);
    }
    localObject1 = localObject2;
    if (c.mSavedViewRegistryState != null)
    {
      localObject1 = localObject2;
      if (localObject2 == null) {
        localObject1 = new Bundle();
      }
      ((Bundle)localObject1).putBundle("android:view_registry_state", c.mSavedViewRegistryState);
    }
    localObject2 = localObject1;
    if (!c.mUserVisibleHint)
    {
      localObject2 = localObject1;
      if (localObject1 == null) {
        localObject2 = new Bundle();
      }
      ((Bundle)localObject2).putBoolean("android:user_visible_hint", c.mUserVisibleHint);
    }
    return localObject2;
  }
  
  void a()
  {
    if (m.F0(3))
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("moveto ACTIVITY_CREATED: ");
      ((StringBuilder)localObject).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject).toString());
    }
    Object localObject = c;
    ((Fragment)localObject).performActivityCreated(mSavedFragmentState);
    localObject = a;
    Fragment localFragment = c;
    ((l)localObject).a(localFragment, mSavedFragmentState, false);
  }
  
  void b()
  {
    int i = b.j(c);
    Fragment localFragment = c;
    mContainer.addView(mView, i);
  }
  
  void c()
  {
    if (m.F0(3))
    {
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("moveto ATTACHED: ");
      ((StringBuilder)localObject1).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject1).toString());
    }
    Object localObject2 = c;
    Fragment localFragment = mTarget;
    Object localObject1 = null;
    if (localFragment != null)
    {
      localObject1 = b.m(mWho);
      if (localObject1 != null)
      {
        localObject2 = c;
        mTargetWho = mTarget.mWho;
        mTarget = null;
      }
      else
      {
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append("Fragment ");
        ((StringBuilder)localObject1).append(c);
        ((StringBuilder)localObject1).append(" declared target fragment ");
        ((StringBuilder)localObject1).append(c.mTarget);
        ((StringBuilder)localObject1).append(" that does not belong to this FragmentManager!");
        throw new IllegalStateException(((StringBuilder)localObject1).toString());
      }
    }
    else
    {
      localObject2 = mTargetWho;
      if (localObject2 != null)
      {
        localObject1 = b.m((String)localObject2);
        if (localObject1 == null)
        {
          localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append("Fragment ");
          ((StringBuilder)localObject1).append(c);
          ((StringBuilder)localObject1).append(" declared target fragment ");
          ((StringBuilder)localObject1).append(c.mTargetWho);
          ((StringBuilder)localObject1).append(" that does not belong to this FragmentManager!");
          throw new IllegalStateException(((StringBuilder)localObject1).toString());
        }
      }
    }
    if ((localObject1 != null) && ((m.P) || (kmState < 1))) {
      ((s)localObject1).m();
    }
    localObject1 = c;
    mHost = mFragmentManager.t0();
    localObject1 = c;
    mParentFragment = mFragmentManager.w0();
    a.g(c, false);
    c.performAttach();
    a.b(c, false);
  }
  
  int d()
  {
    Object localObject = c;
    if (mFragmentManager == null) {
      return mState;
    }
    int j = e;
    int k = b.a[mMaxState.ordinal()];
    int i = j;
    if (k != 1) {
      if (k != 2)
      {
        if (k != 3)
        {
          if (k != 4) {
            i = Math.min(j, -1);
          } else {
            i = Math.min(j, 0);
          }
        }
        else {
          i = Math.min(j, 1);
        }
      }
      else {
        i = Math.min(j, 5);
      }
    }
    localObject = c;
    j = i;
    if (mFromLayout) {
      if (mInLayout)
      {
        i = Math.max(e, 2);
        localObject = c.mView;
        j = i;
        if (localObject != null)
        {
          j = i;
          if (((View)localObject).getParent() == null) {
            j = Math.min(i, 2);
          }
        }
      }
      else if (e < 4)
      {
        j = Math.min(i, mState);
      }
      else
      {
        j = Math.min(i, 1);
      }
    }
    k = j;
    if (!c.mAdded) {
      k = Math.min(j, 1);
    }
    if (m.P)
    {
      localObject = c;
      ViewGroup localViewGroup = mContainer;
      if (localViewGroup != null)
      {
        localObject = a0.n(localViewGroup, ((Fragment)localObject).getParentFragmentManager()).l(this);
        break label252;
      }
    }
    localObject = null;
    label252:
    if (localObject == a0.e.b.f)
    {
      i = Math.min(k, 6);
    }
    else if (localObject == a0.e.b.g)
    {
      i = Math.max(k, 3);
    }
    else
    {
      localObject = c;
      i = k;
      if (mRemoving) {
        if (((Fragment)localObject).isInBackStack()) {
          i = Math.min(k, 1);
        } else {
          i = Math.min(k, -1);
        }
      }
    }
    localObject = c;
    j = i;
    if (mDeferStart)
    {
      j = i;
      if (mState < 5) {
        j = Math.min(i, 4);
      }
    }
    if (m.F0(2))
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("computeExpectedState() of ");
      ((StringBuilder)localObject).append(j);
      ((StringBuilder)localObject).append(" for ");
      ((StringBuilder)localObject).append(c);
      Log.v("FragmentManager", ((StringBuilder)localObject).toString());
    }
    return j;
  }
  
  void e()
  {
    if (m.F0(3))
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("moveto CREATED: ");
      ((StringBuilder)localObject).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject).toString());
    }
    Object localObject = c;
    if (!mIsCreated)
    {
      a.h((Fragment)localObject, mSavedFragmentState, false);
      localObject = c;
      ((Fragment)localObject).performCreate(mSavedFragmentState);
      localObject = a;
      Fragment localFragment = c;
      ((l)localObject).c(localFragment, mSavedFragmentState, false);
      return;
    }
    ((Fragment)localObject).restoreChildFragmentState(mSavedFragmentState);
    c.mState = 1;
  }
  
  void f()
  {
    if (c.mFromLayout) {
      return;
    }
    if (m.F0(3))
    {
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("moveto CREATE_VIEW: ");
      ((StringBuilder)localObject1).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject1).toString());
    }
    Object localObject1 = c;
    LayoutInflater localLayoutInflater = ((Fragment)localObject1).performGetLayoutInflater(mSavedFragmentState);
    Object localObject2 = c;
    localObject1 = mContainer;
    int i;
    if (localObject1 == null)
    {
      i = mContainerId;
      if (i != 0) {
        if (i != -1)
        {
          localObject2 = (ViewGroup)mFragmentManager.o0().c(c.mContainerId);
          localObject1 = localObject2;
          if (localObject2 != null) {
            break label325;
          }
          localObject1 = c;
          if (mRestored)
          {
            localObject1 = localObject2;
            break label325;
          }
        }
      }
    }
    try
    {
      localObject1 = ((Fragment)localObject1).getResources().getResourceName(c.mContainerId);
    }
    catch (Resources.NotFoundException localNotFoundException)
    {
      boolean bool2;
      float f;
      boolean bool1;
      for (;;) {}
    }
    localObject1 = "unknown";
    localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append("No view found for id 0x");
    ((StringBuilder)localObject2).append(Integer.toHexString(c.mContainerId));
    ((StringBuilder)localObject2).append(" (");
    ((StringBuilder)localObject2).append((String)localObject1);
    ((StringBuilder)localObject2).append(") for fragment ");
    ((StringBuilder)localObject2).append(c);
    throw new IllegalArgumentException(((StringBuilder)localObject2).toString());
    localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("Cannot create fragment ");
    ((StringBuilder)localObject1).append(c);
    ((StringBuilder)localObject1).append(" for a container view with no id");
    throw new IllegalArgumentException(((StringBuilder)localObject1).toString());
    localObject1 = null;
    label325:
    localObject2 = c;
    mContainer = ((ViewGroup)localObject1);
    ((Fragment)localObject2).performCreateView(localLayoutInflater, (ViewGroup)localObject1, mSavedFragmentState);
    localObject2 = c.mView;
    if (localObject2 != null)
    {
      bool2 = false;
      ((View)localObject2).setSaveFromParentEnabled(false);
      localObject2 = c;
      mView.setTag(b.a, localObject2);
      if (localObject1 != null) {
        b();
      }
      localObject1 = c;
      if (mHidden) {
        mView.setVisibility(8);
      }
      if (h0.V(c.mView))
      {
        h0.p0(c.mView);
      }
      else
      {
        localObject1 = c.mView;
        ((View)localObject1).addOnAttachStateChangeListener(new a((View)localObject1));
      }
      c.performViewCreated();
      localObject1 = a;
      localObject2 = c;
      ((l)localObject1).m((Fragment)localObject2, mView, mSavedFragmentState, false);
      i = c.mView.getVisibility();
      f = c.mView.getAlpha();
      if (m.P)
      {
        c.setPostOnViewCreatedAlpha(f);
        localObject1 = c;
        if ((mContainer != null) && (i == 0))
        {
          localObject1 = mView.findFocus();
          if (localObject1 != null)
          {
            c.setFocusedView((View)localObject1);
            if (m.F0(2))
            {
              localObject2 = new StringBuilder();
              ((StringBuilder)localObject2).append("requestFocus: Saved focused view ");
              ((StringBuilder)localObject2).append(localObject1);
              ((StringBuilder)localObject2).append(" for Fragment ");
              ((StringBuilder)localObject2).append(c);
              Log.v("FragmentManager", ((StringBuilder)localObject2).toString());
            }
          }
          c.mView.setAlpha(0.0F);
        }
      }
      else
      {
        localObject1 = c;
        bool1 = bool2;
        if (i == 0)
        {
          bool1 = bool2;
          if (mContainer != null) {
            bool1 = true;
          }
        }
        mIsNewlyAdded = bool1;
      }
    }
    c.mState = 2;
  }
  
  void g()
  {
    if (m.F0(3))
    {
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("movefrom CREATED: ");
      ((StringBuilder)localObject1).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject1).toString());
    }
    Object localObject1 = c;
    boolean bool2 = mRemoving;
    boolean bool1 = true;
    int i;
    if ((bool2) && (!((Fragment)localObject1).isInBackStack())) {
      i = 1;
    } else {
      i = 0;
    }
    int j;
    if ((i == 0) && (!b.o().p(c))) {
      j = 0;
    } else {
      j = 1;
    }
    if (j != 0)
    {
      localObject1 = c.mHost;
      if ((localObject1 instanceof m0)) {
        bool1 = b.o().m();
      } else if ((((j)localObject1).f() instanceof Activity)) {
        bool1 = true ^ ((Activity)((j)localObject1).f()).isChangingConfigurations();
      }
      if ((i != 0) || (bool1)) {
        b.o().g(c);
      }
      c.performDestroy();
      a.d(c, false);
      localObject1 = b.k().iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = (s)((Iterator)localObject1).next();
        if (localObject2 != null)
        {
          localObject2 = ((s)localObject2).k();
          if (c.mWho.equals(mTargetWho))
          {
            mTarget = c;
            mTargetWho = null;
          }
        }
      }
      localObject1 = c;
      Object localObject2 = mTargetWho;
      if (localObject2 != null) {
        mTarget = b.f((String)localObject2);
      }
      b.q(this);
      return;
    }
    localObject1 = c.mTargetWho;
    if (localObject1 != null)
    {
      localObject1 = b.f((String)localObject1);
      if ((localObject1 != null) && (mRetainInstance)) {
        c.mTarget = ((Fragment)localObject1);
      }
    }
    c.mState = 0;
  }
  
  void h()
  {
    if (m.F0(3))
    {
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("movefrom CREATE_VIEW: ");
      ((StringBuilder)localObject1).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject1).toString());
    }
    Object localObject2 = c;
    Object localObject1 = mContainer;
    if (localObject1 != null)
    {
      localObject2 = mView;
      if (localObject2 != null) {
        ((ViewGroup)localObject1).removeView((View)localObject2);
      }
    }
    c.performDestroyView();
    a.n(c, false);
    localObject1 = c;
    mContainer = null;
    mView = null;
    mViewLifecycleOwner = null;
    mViewLifecycleOwnerLiveData.n(null);
    c.mInLayout = false;
  }
  
  void i()
  {
    if (m.F0(3))
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("movefrom ATTACHED: ");
      ((StringBuilder)localObject).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject).toString());
    }
    c.performDetach();
    Object localObject = a;
    Fragment localFragment = c;
    int j = 0;
    ((l)localObject).e(localFragment, false);
    localObject = c;
    mState = -1;
    mHost = null;
    mParentFragment = null;
    mFragmentManager = null;
    int i = j;
    if (mRemoving)
    {
      i = j;
      if (!((Fragment)localObject).isInBackStack()) {
        i = 1;
      }
    }
    if ((i != 0) || (b.o().p(c)))
    {
      if (m.F0(3))
      {
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("initState called for fragment: ");
        ((StringBuilder)localObject).append(c);
        Log.d("FragmentManager", ((StringBuilder)localObject).toString());
      }
      c.initState();
    }
  }
  
  void j()
  {
    Object localObject = c;
    if ((mFromLayout) && (mInLayout) && (!mPerformedCreateView))
    {
      if (m.F0(3))
      {
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("moveto CREATE_VIEW: ");
        ((StringBuilder)localObject).append(c);
        Log.d("FragmentManager", ((StringBuilder)localObject).toString());
      }
      localObject = c;
      ((Fragment)localObject).performCreateView(((Fragment)localObject).performGetLayoutInflater(mSavedFragmentState), null, c.mSavedFragmentState);
      localObject = c.mView;
      if (localObject != null)
      {
        ((View)localObject).setSaveFromParentEnabled(false);
        localObject = c;
        mView.setTag(b.a, localObject);
        localObject = c;
        if (mHidden) {
          mView.setVisibility(8);
        }
        c.performViewCreated();
        localObject = a;
        Fragment localFragment = c;
        ((l)localObject).m(localFragment, mView, mSavedFragmentState, false);
        c.mState = 2;
      }
    }
  }
  
  Fragment k()
  {
    return c;
  }
  
  void m()
  {
    Object localObject1;
    if (d)
    {
      if (m.F0(2))
      {
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append("Ignoring re-entrant call to moveToExpectedState() for ");
        ((StringBuilder)localObject1).append(k());
        Log.v("FragmentManager", ((StringBuilder)localObject1).toString());
      }
      return;
    }
    for (;;)
    {
      int j;
      try
      {
        d = true;
        int i = d();
        localObject1 = c;
        j = mState;
        if (i != j) {
          if (i <= j) {
            break label535;
          }
        }
        Object localObject3;
        switch (j + 1)
        {
        case 7: 
          p();
          break;
        case 6: 
          mState = 6;
          break;
        case 5: 
          u();
          break;
        case 4: 
          if (mView != null)
          {
            localObject3 = mContainer;
            if (localObject3 != null) {
              a0.n((ViewGroup)localObject3, ((Fragment)localObject1).getParentFragmentManager()).b(a0.e.c.c(c.mView.getVisibility()), this);
            }
          }
          c.mState = 4;
          break;
        case 3: 
          a();
          break;
        case 2: 
          j();
          f();
          break;
        case 1: 
          e();
          break;
        case 0: 
          c();
          continue;
          n();
          continue;
          mState = 5;
          continue;
          v();
          continue;
          if (m.F0(3))
          {
            localObject1 = new StringBuilder();
            ((StringBuilder)localObject1).append("movefrom ACTIVITY_CREATED: ");
            ((StringBuilder)localObject1).append(c);
            Log.d("FragmentManager", ((StringBuilder)localObject1).toString());
          }
          localObject1 = c;
          if ((mView != null) && (mSavedViewState == null)) {
            s();
          }
          localObject1 = c;
          if (mView != null)
          {
            localObject3 = mContainer;
            if (localObject3 != null) {
              a0.n((ViewGroup)localObject3, ((Fragment)localObject1).getParentFragmentManager()).d(this);
            }
          }
          c.mState = 3;
          continue;
          mInLayout = false;
          mState = 2;
          continue;
          h();
          c.mState = 1;
          continue;
          g();
          continue;
          i();
          continue;
          if ((m.P) && (mHiddenChanged))
          {
            if (mView != null)
            {
              localObject3 = mContainer;
              if (localObject3 != null)
              {
                localObject1 = a0.n((ViewGroup)localObject3, ((Fragment)localObject1).getParentFragmentManager());
                if (c.mHidden) {
                  ((a0)localObject1).c(this);
                } else {
                  ((a0)localObject1).e(this);
                }
              }
            }
            localObject1 = c;
            localObject3 = mFragmentManager;
            if (localObject3 != null) {
              ((m)localObject3).D0((Fragment)localObject1);
            }
            localObject1 = c;
            mHiddenChanged = false;
            ((Fragment)localObject1).onHiddenChanged(mHidden);
          }
          return;
        }
      }
      finally
      {
        d = false;
      }
      continue;
      label535:
      switch (j - 1)
      {
      }
    }
  }
  
  void n()
  {
    if (m.F0(3))
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("movefrom RESUMED: ");
      localStringBuilder.append(c);
      Log.d("FragmentManager", localStringBuilder.toString());
    }
    c.performPause();
    a.f(c, false);
  }
  
  void o(ClassLoader paramClassLoader)
  {
    Object localObject = c.mSavedFragmentState;
    if (localObject == null) {
      return;
    }
    ((Bundle)localObject).setClassLoader(paramClassLoader);
    paramClassLoader = c;
    mSavedViewState = mSavedFragmentState.getSparseParcelableArray("android:view_state");
    paramClassLoader = c;
    mSavedViewRegistryState = mSavedFragmentState.getBundle("android:view_registry_state");
    paramClassLoader = c;
    mTargetWho = mSavedFragmentState.getString("android:target_state");
    paramClassLoader = c;
    if (mTargetWho != null) {
      mTargetRequestCode = mSavedFragmentState.getInt("android:target_req_state", 0);
    }
    paramClassLoader = c;
    localObject = mSavedUserVisibleHint;
    if (localObject != null)
    {
      mUserVisibleHint = ((Boolean)localObject).booleanValue();
      c.mSavedUserVisibleHint = null;
    }
    else
    {
      mUserVisibleHint = mSavedFragmentState.getBoolean("android:user_visible_hint", true);
    }
    paramClassLoader = c;
    if (!mUserVisibleHint) {
      mDeferStart = true;
    }
  }
  
  void p()
  {
    if (m.F0(3))
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("moveto RESUMED: ");
      ((StringBuilder)localObject).append(c);
      Log.d("FragmentManager", ((StringBuilder)localObject).toString());
    }
    Object localObject = c.getFocusedView();
    if ((localObject != null) && (l((View)localObject)))
    {
      boolean bool = ((View)localObject).requestFocus();
      if (m.F0(2))
      {
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("requestFocus: Restoring focused view ");
        localStringBuilder.append(localObject);
        localStringBuilder.append(" ");
        if (bool) {
          localObject = "succeeded";
        } else {
          localObject = "failed";
        }
        localStringBuilder.append((String)localObject);
        localStringBuilder.append(" on Fragment ");
        localStringBuilder.append(c);
        localStringBuilder.append(" resulting in focused view ");
        localStringBuilder.append(c.mView.findFocus());
        Log.v("FragmentManager", localStringBuilder.toString());
      }
    }
    c.setFocusedView(null);
    c.performResume();
    a.i(c, false);
    localObject = c;
    mSavedFragmentState = null;
    mSavedViewState = null;
    mSavedViewRegistryState = null;
  }
  
  r r()
  {
    r localR = new r(c);
    Object localObject = c;
    if ((mState > -1) && (q == null))
    {
      localObject = q();
      q = ((Bundle)localObject);
      if (c.mTargetWho != null)
      {
        if (localObject == null) {
          q = new Bundle();
        }
        q.putString("android:target_state", c.mTargetWho);
        int i = c.mTargetRequestCode;
        if (i != 0)
        {
          q.putInt("android:target_req_state", i);
          return localR;
        }
      }
    }
    else
    {
      q = mSavedFragmentState;
    }
    return localR;
  }
  
  void s()
  {
    if (c.mView == null) {
      return;
    }
    Object localObject = new SparseArray();
    c.mView.saveHierarchyState((SparseArray)localObject);
    if (((SparseArray)localObject).size() > 0) {
      c.mSavedViewState = ((SparseArray)localObject);
    }
    localObject = new Bundle();
    c.mViewLifecycleOwner.e((Bundle)localObject);
    if (!((BaseBundle)localObject).isEmpty()) {
      c.mSavedViewRegistryState = ((Bundle)localObject);
    }
  }
  
  void t(int paramInt)
  {
    e = paramInt;
  }
  
  void u()
  {
    if (m.F0(3))
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("moveto STARTED: ");
      localStringBuilder.append(c);
      Log.d("FragmentManager", localStringBuilder.toString());
    }
    c.performStart();
    a.k(c, false);
  }
  
  void v()
  {
    if (m.F0(3))
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("movefrom STARTED: ");
      localStringBuilder.append(c);
      Log.d("FragmentManager", localStringBuilder.toString());
    }
    c.performStop();
    a.l(c, false);
  }
  
  class a
    implements View.OnAttachStateChangeListener
  {
    a(View paramView) {}
    
    public void onViewAttachedToWindow(View paramView)
    {
      e.removeOnAttachStateChangeListener(this);
      h0.p0(e);
    }
    
    public void onViewDetachedFromWindow(View paramView) {}
  }
}
