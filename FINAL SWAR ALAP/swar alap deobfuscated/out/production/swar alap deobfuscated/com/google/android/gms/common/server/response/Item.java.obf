package com.google.android.gms.common.server.response;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import com.google.android.gms.common.internal.s;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import s3.a;
import s3.c;

public final class h
  extends a
{
  public static final Parcelable.Creator<h> CREATOR = new i();
  final int e;
  private final HashMap f;
  private final String g;
  
  h(int paramInt, ArrayList paramArrayList, String paramString)
  {
    e = paramInt;
    HashMap localHashMap1 = new HashMap();
    int j = paramArrayList.size();
    paramInt = 0;
    while (paramInt < j)
    {
      f localF = (f)paramArrayList.get(paramInt);
      String str = f;
      HashMap localHashMap2 = new HashMap();
      int k = ((ArrayList)s.k(g)).size();
      int i = 0;
      while (i < k)
      {
        g localG = (g)g.get(i);
        localHashMap2.put(f, g);
        i += 1;
      }
      localHashMap1.put(str, localHashMap2);
      paramInt += 1;
    }
    f = localHashMap1;
    g = ((String)s.k(paramString));
    W();
  }
  
  public final String U()
  {
    return g;
  }
  
  public final Map V(String paramString)
  {
    return (Map)f.get(paramString);
  }
  
  public final void W()
  {
    Iterator localIterator1 = f.keySet().iterator();
    while (localIterator1.hasNext())
    {
      Object localObject = (String)localIterator1.next();
      localObject = (Map)f.get(localObject);
      Iterator localIterator2 = ((Map)localObject).keySet().iterator();
      while (localIterator2.hasNext()) {
        ((a.a)((Map)localObject).get((String)localIterator2.next())).E0(this);
      }
    }
  }
  
  public final String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    Iterator localIterator1 = f.keySet().iterator();
    while (localIterator1.hasNext())
    {
      Object localObject = (String)localIterator1.next();
      localStringBuilder.append((String)localObject);
      localStringBuilder.append(":\n");
      localObject = (Map)f.get(localObject);
      Iterator localIterator2 = ((Map)localObject).keySet().iterator();
      while (localIterator2.hasNext())
      {
        String str = (String)localIterator2.next();
        localStringBuilder.append("  ");
        localStringBuilder.append(str);
        localStringBuilder.append(": ");
        localStringBuilder.append(((Map)localObject).get(str));
      }
    }
    return localStringBuilder.toString();
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramInt = c.a(paramParcel);
    c.t(paramParcel, 1, e);
    ArrayList localArrayList = new ArrayList();
    Iterator localIterator = f.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      localArrayList.add(new f(str, (Map)f.get(str)));
    }
    c.H(paramParcel, 2, localArrayList, false);
    c.D(paramParcel, 3, g, false);
    c.b(paramParcel, paramInt);
  }
}
