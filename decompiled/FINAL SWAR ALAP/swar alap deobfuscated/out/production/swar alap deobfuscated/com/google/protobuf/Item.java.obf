package com.google.protobuf;

import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.List;
import java.util.RandomAccess;

public abstract class c0
{
  static final Charset a = Charset.forName("UTF-8");
  static final Charset b = Charset.forName("ISO-8859-1");
  public static final byte[] c;
  public static final ByteBuffer d;
  public static final k e;
  
  static
  {
    byte[] arrayOfByte = new byte[0];
    c = arrayOfByte;
    d = ByteBuffer.wrap(arrayOfByte);
    e = k.j(arrayOfByte);
  }
  
  static Object a(Object paramObject)
  {
    paramObject.getClass();
    return paramObject;
  }
  
  static Object b(Object paramObject, String paramString)
  {
    if (paramObject != null) {
      return paramObject;
    }
    throw new NullPointerException(paramString);
  }
  
  public static int c(boolean paramBoolean)
  {
    if (paramBoolean) {
      return 1231;
    }
    return 1237;
  }
  
  public static int d(byte[] paramArrayOfByte)
  {
    return e(paramArrayOfByte, 0, paramArrayOfByte.length);
  }
  
  static int e(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    paramInt2 = i(paramInt2, paramArrayOfByte, paramInt1, paramInt2);
    paramInt1 = paramInt2;
    if (paramInt2 == 0) {
      paramInt1 = 1;
    }
    return paramInt1;
  }
  
  public static int f(long paramLong)
  {
    return (int)(paramLong ^ paramLong >>> 32);
  }
  
  public static boolean g(byte[] paramArrayOfByte)
  {
    return y1.s(paramArrayOfByte);
  }
  
  static Object h(Object paramObject1, Object paramObject2)
  {
    return ((t0)paramObject1).toBuilder().mergeFrom((t0)paramObject2).buildPartial();
  }
  
  static int i(int paramInt1, byte[] paramArrayOfByte, int paramInt2, int paramInt3)
  {
    int i = paramInt2;
    while (i < paramInt2 + paramInt3)
    {
      paramInt1 = paramInt1 * 31 + paramArrayOfByte[i];
      i += 1;
    }
    return paramInt1;
  }
  
  public static String j(byte[] paramArrayOfByte)
  {
    return new String(paramArrayOfByte, a);
  }
  
  public static abstract interface a
    extends c0.i
  {
    public abstract a a(int paramInt);
  }
  
  public static abstract interface b
    extends c0.i
  {
    public abstract b a(int paramInt);
  }
  
  public static abstract interface c
  {
    public abstract int getNumber();
  }
  
  public static abstract interface d
  {
    public abstract c0.c a(int paramInt);
  }
  
  public static abstract interface e
  {
    public abstract boolean a(int paramInt);
  }
  
  public static abstract interface f
    extends c0.i
  {
    public abstract f a(int paramInt);
  }
  
  public static abstract interface g
    extends c0.i
  {
    public abstract g a(int paramInt);
  }
  
  public static abstract interface h
    extends c0.i
  {
    public abstract h a(int paramInt);
  }
  
  public static abstract interface i
    extends List, RandomAccess
  {
    public abstract boolean T();
    
    public abstract i a(int paramInt);
    
    public abstract void c();
  }
}
