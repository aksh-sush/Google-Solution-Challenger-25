package db;

import jb.b;
import jb.c;
import jb.d;
import jb.e;

public abstract class u
{
  private static final v a;
  private static final b[] b = new b[0];
  
  static
  {
    Object localObject = null;
    try
    {
      v localV = (v)Class.forName("kotlin.reflect.jvm.internal.ReflectionFactoryImpl").newInstance();
      localObject = localV;
    }
    catch (ClassCastException|ClassNotFoundException|InstantiationException|IllegalAccessException localClassCastException)
    {
      for (;;) {}
    }
    if (localObject == null) {
      localObject = new v();
    }
    a = (v)localObject;
  }
  
  public static d a(i paramI)
  {
    return a.a(paramI);
  }
  
  public static b b(Class paramClass)
  {
    return a.b(paramClass);
  }
  
  public static c c(Class paramClass)
  {
    return a.c(paramClass, "");
  }
  
  public static e d(o paramO)
  {
    return a.d(paramO);
  }
  
  public static String e(h paramH)
  {
    return a.e(paramH);
  }
  
  public static String f(m paramM)
  {
    return a.f(paramM);
  }
}
